---

import type { Preload } from '@/types/Preload';

interface Props {
  title: string;
  description: string;
  preload?: Array<Preload>;
  canonical?: string
  image?: string
}

const { 
  title,
  description,
  preload,
  canonical,
  image = "/hellbound.png"
} = Astro.props as Props;
console.log(preload?.map((p) => p.href) + " preload")
const determineCanonicalURL = () => {
	if (Astro.url.host.includes("localhost")) return "http://localhost:4321"
	return canonical || Astro.url.pathname
}

const canonicalURL = new URL(determineCanonicalURL(), Astro.site)
---

<title>{title}</title>
<meta charset="UTF-8" />
<meta name="description" content={description} />
{
  preload?.map(({ href, as, type, rel = "preload", crossorigin }) => (
    <link {rel} {href} {as} {type} {crossorigin} />
  ))
}
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="canonical" href={canonicalURL} />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@hellboundcup" />
<meta name="twitter:creator" content="@el_vallarto" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.url)} />

<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content="Hellbound Cup" />
<meta property="og:type" content="website" />
<meta property="og:locale" content="es_MX" />